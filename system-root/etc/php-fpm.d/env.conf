; Database variables passed via -e argument on Docker
env["DB_NAME"] = "$DB_NAME"
env["DB_HOST"] = "$DB_HOST"
env["DB_USER"] = "$DB_USER"
env["DB_PASSWORD"] = "$DB_PASSWORD"

; Use both ENV versions of password just in case someone decides to use shorter version
env["DB_PASS"] = "$DB_PASS"

;;;;;
; Auto configured variables from docker for using linked mariadb container in local development
;;;;;

; Mariadb / Mariadb Galera
env["DB_PORT_3306_TCP_ADDR"] = "$DB_PORT_3306_TCP_ADDR"
env["DB_ENV_MYSQL_PASSWORD"] = "$DB_ENV_MYSQL_PASSWORD"
env["DB_ENV_MYSQL_USER"] = "$DB_ENV_MYSQL_USER"
env["DB_ENV_MYSQL_PASSWORD"] = "$DB_ENV_MYSQL_PASSWORD"

; Redis / Redis cluster
env["REDIS_PORT_6379_TCP_ADDR"] = "$REDIS_PORT_6379_TCP_ADDR"

; WP siteurl and home
env["WP_SITEURL"] = "$WP_SITEURL"
env["WP_HOME"] = "$WP_HOME"

; Environment so users can disable some features in dev
env["WP_ENV"] = "$WP_ENV"

; Use http://phinx.org for database migrations
env["PHINX_ENVIRONMENT"] = "$WP_ENV"

; WP Salts
env["AUTH_KEY"] = "$AUTH_KEY"
env["SECURE_AUTH_KEY"] = "$SECURE_AUTH_KEY"
env["LOGGED_IN_KEY"] = "$LOGGED_IN_KEY"
env["NONCE_KEY"] = "$NONCE_KEY"
env["AUTH_SALT"] = "$AUTH_SALT"
env["SECURE_AUTH_SALT"] = "$SECURE_AUTH_SALT"
env["LOGGED_IN_SALT"] = "$LOGGED_IN_SALT"

; Really useful wp plugin if you don't have SSL in the main site: https://github.com/Seravo/wp-https-domain-alias
env["HTTPS_DOMAIN_ALIAS"] = "$HTTPS_DOMAIN_ALIAS"

; Redis for Object cache and sessions
env["WP_REDIS_HOST"] = "$WP_REDIS_HOST"
env["WP_REDIS_PORT"] = "$WP_REDIS_PORT"

; Set configs for https://wordpress.org/plugins/redis-cache/other_notes/
env["WP_REDIS_PASSWORD"] = "$WP_REDIS_PASSWORD"
env["WP_REDIS_DATABASE"] = "$WP_REDIS_DATABASE"
env["WP_CACHE_KEY_SALT"] = "$WP_CACHE_KEY_SALT"
env["WP_REDIS_CLIENT"] = "$WP_REDIS_CLIENT"
env["WP_REDIS_SCHEME"] = "$WP_REDIS_SCHEME"
env["WP_REDIS_PATH"] = "$WP_REDIS_PATH"
