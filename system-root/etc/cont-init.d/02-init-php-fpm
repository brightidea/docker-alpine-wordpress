#!/usr/bin/with-contenv bash

# Craete log directory
mkdir -p /data/log/php
touch /data/log/php/error.log
chown -R wordpress:web /data/log/php

# Remove xdebug if this is production
# In somecases even having xdebug installed increases loading times
if [ "$WP_ENV" != "development" ]; then
  rm /etc/php7/conf.d/xdebug.ini
  rm /usr/lib/php7/modules/xdebug.so
else
  # In development create directory for xdebug profiling
  mkdir -p /tmp/xdebug/
  chown wordpress:web /tmp/xdebug/

  # Set xdebug remote from docker env
  # Default is dlite host machine ip
  if [ -n "$XDEBUG_REMOTE_HOST" ]; then
    echo "xdebug.remote_host=$XDEBUG_REMOTE_HOST" > /etc/php7/conf.d/xdebug_remote.ini
  fi
fi

# Setup sessions
echo "; This file defines which backend php uses for sessions" > /etc/php7/conf.d/session.ini

if [ "$PHP_SESSION_HANDLER" == "redis" ]; then
  echo "session.save_handler = redis" >> /etc/php7/conf.d/session.ini

  redis_resource_string="$WP_REDIS_SCHEME://"

  # Use different setup in dev/prod
  if [ "$WP_REDIS_HOST" != "" ]; then
    redis_resource_string+="$WP_REDIS_HOST:$WP_REDIS_PORT"
  elif [ "$REDIS_PORT_6379_TCP_ADDR" != "" ]; then
    redis_resource_string+="$REDIS_PORT_6379_TCP_ADDR:$WP_REDIS_PORT"
  fi

  # Use password or different database when user provides them
  redis_resource_string+="?database=$PHP_SESSION_REDIS_DB"

  if [ "$WP_REDIS_PASSWORD" != "" ]; then
    redis_resource_string+="&auth=$WP_REDIS_PASSWORD"
  fi

  echo "session.save_path = \"$redis_resource_string\"" >> /etc/php7/conf.d/session.ini

else # Use normal file based sessions if redis is not configured
  echo "session.save_handler = files" >> /etc/php7/conf.d/session.ini
  echo "session.save_path = /tmp" >> /etc/php7/conf.d/session.ini
fi
